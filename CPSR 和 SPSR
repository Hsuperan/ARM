CPSR 和 SPSR

    CPSR:程序状态寄存器(current program status register) (当前程序状态寄存器)，在任何处理器模式下被访问。它包含了条件标志位、中断禁止位、当前处理器模式标志以及其他的一些控制和状态位。

CPSR在用户级编程时用于存储条件码。

SPSR:程序状态保存寄存器（saved program status register）,每一种处理器模式下都有一个状态寄存器SPSR,SPSR用于保存CPSR的状态，以便异常返回后恢复异常发生时的工作状态。当特定的异常中断发生时，这个寄存器用于存放当前程序状态寄存器的内容。在异常中断退出时，可以用SPSR来恢复CPSR。

由于用户模式和系统模式不是异常中断模式，所以他没有SPSR。当用户在用户模式或系统模式访问SPSR，将产生不可预知的后果。

CPSR格式如下所示。SPSR和CPSR格式相同。
31 30 29 28 27 26 7 6 5 4 3 2 1 0
N Z C V Q DNM(RAZ) I F T M4 M3 M2 M1 M0


***条件标志位***
N——本位设置成当前指令运算结果的bit[31]的值。当两个表示的有符号整数运算时，n=1表示运算结果为负数，n=0表示结果为正或零。

z——z=1表示运算的结果为零；z=0表示运算的结果不为零。对于CMP指令，Z=1表示进行比较的两个数大小相等。

C——下面分四种情况讨论C的设置方法：
在加法指令中（包括比较指令CMP），当结果产生了进位,则C=1,表示无符号运算发生上溢出；其他情况C=0。
在减法指令中（包括减法指令CMP），当运算中发生错位，则C=0，表示无符号运算数发生下溢出；其他情况下C=1。
对于包含移位操作的非加减运算指令，C中包含最后一次溢出的的位的数值。对于其他非加减运算指令，C位的值通常不受影响。

V——对于加减运算指令，当操作数和运算结果为二进制的补码表示的带符号数时，V=1表示符号为溢出；通常其他指令不影响V位。

***Q标识位***
在ARM V5的E系列处理器中，CPSR的bit[27]称为q标识位，主要用于指示增强的dsp指令是否发生了溢出。同样的spsr的bit[27]位也称为q标识位，用于在异常中断发生时保存和恢复CPSR中的Q标识位。
在ARM V5以前的版本及ARM V5的非E系列的处理器中，Q标识位没有被定义。

***CPSR中的控制位***
CPSR的低八位I、F、T、M[4:0]统称为控制位。当异常中断发生时这些位发生变化。在特权级的处理器模式下，软件可以修改这些控制位。

**中断禁止位：当I=1时禁止IRQ中断，当F=1时禁止FIQ中断

**T控制位：T控制位用于控制指令执行的状态，即说明本指令是ARM指令还是Thumb指令。对于ARM V4以更高版本的T系列ARM处理器，T控制位含义如下：
T=0表示执行ARM指令
T=1表示执行Thumb指令
对于ARM V5以及更高版本的非T系列处理器，T控制位的含义如下
T=0表示执行ARM指令
T=1表示强制下一条执行的指令产生未定指令中断

***M控制位***
M控制位控制处理器模式，具体含义如下：

M[4:0] 处理器模式    可访问的寄存器
ob10000 user     pc,r14~r0,CPSR
0b10001 FIQ      PC,R14_FIQ-R8_FIQ,R7~R0,CPSR,SPSR_FIQ
0b10010 IRQ      PC,R14_IRQ-R13_IRQ,R12~R0,CPSR,SPSR_IRQ
0B10011 SUPERVISOR    PC,R14_SVC-R13_SVC,R12~R0,CPSR,SPSR_SVC
0b10111 ABORT     PC,R14_ABT-R13_ABT,R12~R0,CPSR,SPSR_ABT
0b11011 UNDEFINEED    PC,R14_UND-R8_UND,R12~R0,CPSR,SPSR_UND
0b11111 SYSTEM     PC,R14-R0,CPSR(ARM V4以及更高版本）

***CPSR中的其他位***
这些位用于将来扩展。应用软件不要操作这些位。

(CPSR,SPSR)访问指令
ARM 微处理器支持程序状态寄存器访问指令，用于在程序状态寄存器和通用寄存器之间传送数据，程序状态寄存器访问指令包括以下两条：
— MRS： 程序状态寄存器到通用寄存器的数据传送指令
— MSR： 通用寄存器到程序状态寄存器的数据传送指令

1、 MRS 指令
MRS 指令的格式为：MRS{条件} 通用寄存器，程序状态寄存器（CPSR 或SPSR）
MRS 指令用于将程序状态寄存器的内容传送到通用寄存器中。该指令一般用在以下几种情况：
－ 当需要改变程序状态寄存器的内容时，可用MRS 将程序状态寄存器的内容读入通用寄存器，修改后再写回程序状态寄存器。
－ 当在异常处理或进程切换时，需要保存程序状态寄存器的值，可先用该指令读出程序状态寄存器的值，然后保存。
指令示例：
MRS R0，CPSR ；传送CPSR 的内容到R0
MRS R0，SPSR ；传送SPSR 的内容到R0

2、 MSR 指令
MSR 指令的格式为：MSR{条件} 程序状态寄存器（CPSR 或SPSR）_<域>，操作数
MSR 指令用于将操作数的内容传送到程序状态寄存器的特定域中。其中，操作数可以为通用寄存器或立即数。<域>用于设置程序状态寄存器中需要操作的位，32 位的程序状态寄存器可分为4 个域：
位[31：24]为条件标志位域，用f 表示；
位[23：16]为状态位域，用s 表示；
位[15：8]为扩展位域，用x 表示；
位[7：0]为控制位域，用c 表示；
该指令通常用于恢复或改变程序状态寄存器的内容，在使用时，一般要在MSR 指令中指明将要操作的域。
指令示例：
MSR CPSR，R0 ；传送R0 的内容到CPSR
MSR SPSR，R0 ；传送R0 的内容到SPSR
MSR CPSR_c，R0 ；传送R0 的内容到SPSR，但仅仅修改CPSR 中的控制位域

1 状态寄存器传送至通用寄存器类指令
功能：将状态寄存器的内容传送至通用寄存器。

格式：
MRS{<条件码>}Rd,CPSR}SPSR
其中：
Rd      目标寄存器，Rd不允许R15。
R=0     将CPSR中的内容传送目的寄存器。
R=1     将SPSR中的内容传送至目的寄存器。

注释：
MRS与MSR配合使用，作为更新PSR的读-修改-写序列的一部分。例如：改变处理器或清除标志Q。注意：当处理器在用户模式或系统模式下，一定不能试图访问SPSR这条指令，不影响条件码标志。
例：
MRS   R0，CRSR              ；将CPSR中的内容传送至R0
MRS   R3，SPSR              ；将SPSR中的内容传送至R3

2 .通用寄存器传送至状态寄存器传送指令
功能：将通用寄存器的内容传送至状态寄存器.

格式：
MSR{<条件码>CPSR_f|SPSR_f,<#ommed_8r>
MSR{<条件码>CPSR_<field>|SPSR_<field>,Rm
其中：
<field>字段可以是以下之一或多种：
C：控制域屏蔽字段（PSR中的第0位到第7位）；
X：扩展域屏蔽字段（PSR中的第8位到第15位）；
S：状态域屏蔽字段（PSR中的第16位到第32位）；
F：标志域屏蔽字段（PSR中的第24位到第31位）。
immed_8r 值数字常量的表达式。常量必须对应8位位图。该位图在32位字中循环移位偶数数位。
Rm        源寄存器。

注释：
同前一条指令（MRS）。
例1：设置N、Z、C、V标志。
MSR    CPSR_f,#&f0000000            ；仅高位有效，其他必须为0
例2：
仅置位C标志，保留N、Z、V标志。
MRS    R0，CPSR                    ；将CPSR中的内容传送至R0
ORR    R0，R0，#&1f                ；置位R0的第29位
MSR    CPSR_c,R0                   ；再将R0中的内容传送至CPSR
